name: Build and deploy JAR app to Azure Web App - mybackend

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest  # Use Windows environment for building

    steps:
      # Step 1: Checkout the repository to get the code
      - uses: actions/checkout@v4

      # Step 2: Set up Java environment using the desired Java version
      - name: Set up Java version
        uses: actions/setup-java@v4
        with:
          java-version: '17'  # You can change the version based on your requirements
          distribution: 'adoptopenjdk'

      # Step 3: Build the Spring Boot application using Maven (from the backend folder)
      - name: Build with Maven
        run: |
          cd backend  # Navigate to the backend directory where pom.xml is located
          mvn clean install  # Build the application using Maven

      # Step 4: Upload the artifact (JAR file) for use in the deployment job
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: java-app  # Name for the artifact
          path: 'backend/target/*.jar'  # Path to the JAR file created after build in backend/target

  deploy:
    runs-on: windows-latest  # Use Windows environment for deployment
    needs: build  # The deploy job depends on the successful completion of the build job
    environment:
      name: 'Production'  # Name of the deployment environment
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}  # Output URL after deployment
    permissions:
      id-token: write  # Permission to generate a token for the Azure login

    steps:
      # Step 1: Download the artifact (JAR) from the build job
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: java-app  # Name of the artifact uploaded during the build job

      # Step 2: Login to Azure using credentials stored in GitHub secrets
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID }}

      # Step 3: Deploy the JAR file to Azure Web App
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'mybackend'  # Your Azure Web App name
          slot-name: 'Production'  # Deployment environment (e.g., Production or Staging)
          package: 'backend/target/*.jar'  # Path to the JAR file inside the backend folder
